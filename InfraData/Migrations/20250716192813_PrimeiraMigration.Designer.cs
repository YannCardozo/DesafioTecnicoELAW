// <auto-generated />
using InfraData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfraData.Migrations
{
    [DbContext(typeof(ProcessoContext))]
    [Migration("20250716192813_PrimeiraMigration")]
    partial class PrimeiraMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("General.Models.DAO.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("codCnj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codProc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descServ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descrFase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exibProc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeAutor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeComarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeReu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoAutor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoReu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalPersonagem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("General.Models.DAO.personagensResumido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoId");

                    b.ToTable("PersonagensResumidos");
                });

            modelBuilder.Entity("General.Models.DAO.personagensResumido", b =>
                {
                    b.HasOne("General.Models.DAO.Processo", "Processo")
                        .WithMany("PersonagensResumidos")
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("General.Models.DAO.Processo", b =>
                {
                    b.Navigation("PersonagensResumidos");
                });
#pragma warning restore 612, 618
        }
    }
}
